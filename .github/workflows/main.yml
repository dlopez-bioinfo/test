name: Build and Push Docker Images

on:
  push:
    branches:
      - main  # Cambia a la rama deseada
    paths:
      - '**/Dockerfile'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Find changed Dockerfiles
        id: find_dockerfiles
        run: |
          # Encuentra Dockerfiles modificados en el último commit comparado al anterior
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep 'Dockerfile' || true)
          echo "Changed Dockerfiles: $CHANGED_FILES"
          # Si hay Dockerfiles, configurar salida; si no, establecer como vacío
          if [ -n "$CHANGED_FILES" ]; then
            echo "::set-output name=dockerfiles::$CHANGED_FILES"
          else
            echo "::set-output name=dockerfiles::"
          fi

      - name: Build and push Docker images
        if: steps.find_dockerfiles.outputs.dockerfiles
        run: |
          # Leer Dockerfiles cambiados
          dockerfiles="${{ steps.find_dockerfiles.outputs.dockerfiles }}"
          for dockerfile in $dockerfiles
          do
            # Extraer el directorio donde está el Dockerfile
            dir=$(dirname "$dockerfile")
            # Usar el nombre del directorio como etiqueta (tag) en Docker Hub
            image_name="${{ secrets.DOCKER_USERNAME }}/$(basename $dir)"
            # Construir la imagen
            docker build -t "$image_name:latest" "$dir"
            # Subir la imagen
            docker push "$image_name:latest"
          done

