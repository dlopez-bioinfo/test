name: Docker Build and Push

on: 
  push:
    paths:
      - '**/Dockerfile'   # Ejecutar solo si se modifica algÃºn archivo Dockerfile

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
  
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Find changed Dockerfiles
        id: find_dockerfiles
        run: |
          # Encuentra los Dockerfiles modificados
          changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'Dockerfile')
          echo "changed_files=$changed_files" >> $GITHUB_ENV
  
      - name: Build, push Docker images, and create version files
        if: env.changed_files != ""
        run: |
          for dockerfile in $changed_files; do
          # Extrae el directorio de cada Dockerfile
          dir=$(dirname $dockerfile)
          # Usa el nombre del directorio para etiquetar la imagen
          image_name="${{ secrets.DOCKER_USERNAME }}/$(basename $dir)-${{ github.sha }}"
            
          echo "Building and pushing $image_name..."
            
          # Usa docker/build-push-action para construir y empujar la imagen a Docker Hub
          echo "Building Docker image $image_name from directory $dir"
          echo "docker build directory is: $dir"
        
          # Construye la imagen Docker
          docker build -t $image_name $dir
          # Empuja la imagen a Docker Hub
          docker push $image_name
          
          # Genera el archivo docker_version en el mismo directorio que el Dockerfile
          echo "$image_name" > "$dir/docker_version" 
